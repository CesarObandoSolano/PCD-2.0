<configuration>
	<components>
		<!-- Pipeline Instance -->
		<component id="Checkout"
				   service="UCommerce.Pipelines.IPipeline`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.CheckoutPipeline, UCommerce.Pipelines">
			<parameters>
				<tasks>
					<array>
						<value>${Checkout.ValidatePaymentsMadeAgainstOrderTotal}</value>
						<value>${Checkout.AssignOrderNumber}</value>
						<value>${Checkout.CreateCustomer}</value>
						<value>${Checkout.CreateMemberForCustomer}</value>
						<value>${Checkout.ConvertBasketToPurchaseOrder}</value>
						<value>${Checkout.AddAuditTrailForCurrentOrderStatus}</value>
						<value>${Checkout.SetVoucherUses}</value>
						<value>${Checkout.ClearBasketInformation}</value>
						<value>${Checkout.SavePurchaseOrder}</value>
						<value>${Checkout.SendConfirmationEmail}</value>
					</array>
				</tasks>
			</parameters>
		</component>

		<!-- Pipeline Tasks-->
		<component id="Checkout.ValidatePaymentsMadeAgainstOrderTotal"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.ValidatePaymentsMadeAgainstOrderTotalTask, UCommerce.Pipelines" />
		
		<component id="Checkout.CreateCustomer"
	      service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
	      type="UCommerce.Pipelines.Transactions.Baskets.Checkout.CreateCustomerTask, UCommerce.Pipelines">
	      <parameters>
	        <createCustomerPipeline>${CreateCustomer}</createCustomerPipeline>
	      </parameters>
	    </component>
		
		<component id="Checkout.CreateMemberForCustomer"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.CreateMemberForCustomerTask, UCommerce.Pipelines" />
		
		<component id="Checkout.AssignOrderNumber"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.AssignOrderNumberTask, UCommerce.Pipelines" />
		
		<component id="Checkout.ConvertBasketToPurchaseOrder"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.ConvertBasketToPurchaseOrderTask, UCommerce.Pipelines" />
		
		<component id="Checkout.SavePurchaseOrder"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Common.SavePurchaseOrderTask, UCommerce.Pipelines" />
		
		<component id="Checkout.AddAuditTrailForCurrentOrderStatus"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Common.AddAuditTrailForCurrentOrderStatusTask, UCommerce.Pipelines" />
		
		<component id="Checkout.ClearBasketInformation"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.ClearBasketInformationTask, UCommerce.Pipelines" />
		
		<component id="Checkout.SetVoucherUses"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Transactions.Baskets.Checkout.SetVoucherUsesTask, UCommerce.Pipelines" />
		
		<component id="Checkout.SendConfirmationEmail"
				   service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.PurchaseOrder, UCommerce]], UCommerce"
				   type="UCommerce.Pipelines.Common.SendEmailTask, UCommerce.Pipelines">
			<parameters>
				<emailTypeName>OrderConfirmation</emailTypeName>
			</parameters>
		</component>
	</components>
</configuration>