<!--
	Core configuration for uCommerce components.
-->
<configuration>
	<components>

    <!-- Data Access -->
		<component
			id="SessionProvider"
			service="UCommerce.EntitiesV2.ISessionProvider, UCommerce"
			type="UCommerce.EntitiesV2.SessionProvider, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>
    
		<component
			id="StatelessSessionProvider"
			service="UCommerce.EntitiesV2.IStatelessSessionProvider, UCommerce"
			type="UCommerce.EntitiesV2.SessionProvider, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="CacheProvider"
			service="UCommerce.EntitiesV2.ICacheProvider, UCommerce"
			type="UCommerce.EntitiesV2.CacheProvider, UCommerce"/>

		<component
			id="UCommerce.CoreDataMappings"
			service="UCommerce.EntitiesV2.IContainsNHibernateMappingsTag, UCommerce"
			type="UCommerce.EntitiesV2.MappingAssemblyTag, UCommerce"/>

		<component
			id="Repository"
			service="UCommerce.EntitiesV2.IRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.Repository`1, UCommerce"/>

		<component
			id="SoftDeletableRepository"
			service="UCommerce.EntitiesV2.ISoftDeletableRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.SoftDeletableRepository`1, UCommerce"/>

		<!-- Internal libraries-->
		<component
			id="CatalogLibraryInternal"
			service="UCommerce.Catalog.CatalogLibraryInternal, UCommerce"
			type="UCommerce.Catalog.CatalogLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="MarketingLibraryInternal"
			service="UCommerce.Marketing.MarketingLibraryInternal, UCommerce"
			type="UCommerce.Marketing.MarketingLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="TransactionLibraryInternal"
			service="UCommerce.Transactions.TransactionLibraryInternal, UCommerce"
			type="UCommerce.Transactions.TransactionLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="SearchLibraryInternal"
			service="UCommerce.Search.SearchLibraryInternal, UCommerce"
			type="UCommerce.Search.SearchLibraryInternal, UCommerce">
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="LibraryImpl"
			service="UCommerce.Xslt.LibraryImpl, UCommerce"
			type="UCommerce.Xslt.LibraryImpl, UCommerce"/>

		<!-- Interceptors -->
		<component
			id="ExceptionLoggingInterceptor"
			service="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"/>

		<component
			id="XmlExceptionInterceptor"
			service="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce"
			type="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce"/>

		<component
			id="TimingInterceptor"
			service="UCommerce.Infrastructure.Interceptor.TimingInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Interceptor.TimingInterceptor, UCommerce.Infrastructure"/>

		<!-- Context API -->
		<component
			id="SiteContext"
			service="UCommerce.Runtime.ISiteContext, UCommerce"
			type="UCommerce.Runtime.SiteContext, UCommerce"/>

		<component
			id="CatalogContext"
			service="UCommerce.Runtime.ICatalogContext, UCommerce"
			type="UCommerce.Runtime.CatalogContext, UCommerce"/>

		<component
			id="OrderContext"
			service="UCommerce.Runtime.IOrderContext, UCommerce"
			type="UCommerce.Runtime.OrderContext, UCommerce"/>

		<component
			id="LocalizationContext"
			service="UCommerce.Infrastructure.Globalization.ILocalizationContext, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Globalization.Globalization, UCommerce.Infrastructure"/>

		<component
			id="ClientContext"
			service="UCommerce.Xslt.IClientContext, UCommerce"
			type="UCommerce.Xslt.ClientContext, UCommerce"/>

		<!-- Services -->
		<component
			id="OrderService"
			service="UCommerce.Transactions.IOrderService, UCommerce"
			type="UCommerce.Transactions.OrderService, UCommerce"/>

		<component
			id="PriceService"
			service="UCommerce.Catalog.IPricingService, UCommerce"
			type="UCommerce.Catalog.PricingService, UCommerce"/>

		<component
			id="TaxService"
			service="UCommerce.Catalog.ITaxService, UCommerce"
			type="UCommerce.Catalog.TaxService, UCommerce"/>

		<component
			id="UrlService"
			service="UCommerce.Catalog.IUrlService, UCommerce"
			type="UCommerce.Catalog.UrlService, UCommerce"/>

		<component
			id="ProductReviewService"
			service="UCommerce.Catalog.ProductReviewService, UCommerce"
			type="UCommerce.Catalog.ProductReviewService, UCommerce"/>

		<component
			id="CheckoutService"
			service="UCommerce.Transactions.CheckoutService, UCommerce"
			type="UCommerce.Transactions.CheckoutService, UCommerce"/>

		<component
			id="EmailService"
			service="UCommerce.Transactions.IEmailService, UCommerce"
			type="UCommerce.Transactions.EmailService, UCommerce"/>

		<component
		  id="NumberSeriesService"
		  service ="UCommerce.Transactions.INumberSeriesService, UCommerce"
		  type="UCommerce.Transactions.NumberSeriesService, UCommerce"/>

		<component
		  id="RoundingService"
		  service ="UCommerce.Transactions.IRoundingService, UCommerce"
		  type="UCommerce.Transactions.RoundingService, UCommerce"/>

		<component
			id="AbsoluteUrlService"
			service="UCommerce.Web.IAbsoluteUrlService, UCommerce"
			type="UCommerce.Web.Impl.AbsoluteUrlService, UCommerce">
			<parameters>
				<includeLanguage>False</includeLanguage>
				<includePort>False</includePort>
			</parameters>
		</component>

		<component
			id="uCommercePathService"
			service="UCommerce.Infrastructure.Runtime.IPathService, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Runtime.uCommercePathService, UCommerce.Infrastructure"/>

		<component 
			id="CallbackUrl" 
			service="UCommerce.Web.ICallbackUrl, UCommerce"
			type="UCommerce.Web.Impl.CallbackUrl, UCommerce" />

		<component
			id="AppsService"
			service="UCommerce.Apps.IAppsService, UCommerce"
			type="UCommerce.Apps.AppsService, UCommerce"/>
		
		<!-- Web services -->
		<component
            id="ServiceStackAppHost"
            service="ServiceStack.WebHost.Endpoints.AppHostBase, ServiceStack, Version=3.9.55.0"
            type="UCommerce.Web.Api.UCommerceAppHost, UCommerce.Web.Api"/>

		<!-- Infrastructure -->
		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		<!-- Shell services -->
		<component
			id="TreeServiceShell"
			service="UCommerce.Tree.ITreeContentService, UCommerce"
			type="UCommerce.Tree.Impl.TreeContentService, UCommerce">
			<parameters>
				<RootNodeType>root</RootNodeType>
				<RootNodeHasAutoLoad>true</RootNodeHasAutoLoad>
				<RootNodeHasChildren>true</RootNodeHasChildren>
				<RootNodeName>uCommerce</RootNodeName>
				<RootNodeIcon>ucommerce-logo-icon.png</RootNodeIcon>
				<RootNodeItemGuid>3806A967-DD30-421F-A835-7D8DE80054B9</RootNodeItemGuid>
				<RootNodeId>-1</RootNodeId>
				<RootNodeParentId>10</RootNodeParentId>
				<contentProviders>
					<list type="UCommerce.Tree.ITreeContentProvider, UCommerce">
						<item>${DefaultShellCatalogSectionProvider}</item>
						<item>${DefaultCatalogSearchItemProvider}</item>
						<item>${DefaultOrdersSectionProvider}</item>
						<item>${DefaultMarketingSectionProvider}</item>
						<item>${DefaultAnalyticsSectionProvider}</item>
						<item>${DefaultAppsRootSectionProvider}</item>
						<item>${DefaultRootSectionProvider}</item>
						<item>${DefaultSettingsAppsProvider}</item>
						<item>${DefaultSettingsAppsInstallerProvider}</item>
						<item>${DefaultSettingsAppsInstalledProvider}</item>
						<item>${DefaultSettingsRootSectionProvider}</item>
						<item>${DefaultSettingsCatalogProvider}</item>
						<item>${DefaultSettingsOrdersProvider}</item>
						<item>${DefaultSettingsEmailsProvider}</item>
						<item>${DefaultSettingsDefinitionsProvider}</item>
						<item>${DefaultSettingsSecurityProvider}</item>
					</list>
				</contentProviders>
			</parameters>
		</component>
		
		<component
			id ="DefaultRootSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsRootSectionsProvider, UCommerce" />

		<component
			id ="DefaultCatalogSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.CatalogSectionProvider, UCommerce">
			<parameters>
				<considerProductsAsChildren>true</considerProductsAsChildren>
			</parameters>
		</component>

		<component
			id ="DefaultCatalogSearchItemProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.CatalogSearchNodeProvider, UCommerce">
		</component>

		<component
			id ="DefaultShellCatalogSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.CatalogSectionProvider, UCommerce">
			<parameters>
				<considerProductsAsChildren>false</considerProductsAsChildren>
			</parameters>
		</component>

		<component
			id="DefaultProductSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.ProductSectionProvider, UCommerce" />

		<component
			id ="DefaultOrdersSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.OrdersSectionProvider, UCommerce" />

		<component
			id ="DefaultMarketingSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.MarketingSectionProvider, UCommerce" />

		<component
			id ="DefaultAnalyticsSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.AnalyticsSectionProvider, UCommerce" />

		<component
			id ="DefaultSettingsRootSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsRootSectionProvider, UCommerce" />

		<component
			id ="DefaultSettingsCatalogProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsCatalogProvider, UCommerce" />

		<component
			id ="DefaultSettingsOrdersProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsOrdersProvider, UCommerce" />

		<component
			id ="DefaultSettingsEmailsProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsEmailsProvider, UCommerce" />

		<component
			id ="DefaultSettingsDefinitionsProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
		  type="UCommerce.Tree.Impl.Providers.SettingsDefinitionsProvider, UCommerce" />

		<component
			id ="DefaultSettingsSecurityProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsSecurityProvider, UCommerce" />

		<component
			id="DefaultAppsRootSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.AppsRootSectionProvider, UCommerce" />

	<component 
			id="DefaultSettingsAppsProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsAppsProvider, UCommerce" />
	
		<component
		id ="DefaultSettingsAppsInstalledProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsAppsInstalledProvider, UCommerce" />

			
		<component
			id ="DefaultSettingsAppsInstallerProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.SettingsAppsInstallerProvider, UCommerce" />

		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		<component
			id="TreeNodeConverterService"
			service="UCommerce.Web.Api.Services.Nodes.ITreeNodeContentToTreeNodeConverter, UCommerce.Web.Api"
			type="UCommerce.Web.Api.Services.Nodes.Impl.TreeNodeContentToTreeNodeConverter, UCommerce.Web.Api">
			<parameters>
				<urlConverters>
					<list type="UCommerce.Tree.ITreeNodeTypeToUrlConverter, UCommerce">
						<item>${DefaultUrlConverter}</item>
						<item>${AppActionUrlConverter}</item>
						<item>${ActionUrlConverter}</item>
					</list>
				</urlConverters>
				<optionConverters>
					<list type="UCommerce.Tree.ITreeNodeOptionToOptionItemConverter, UCommerce">
						<item>${DefaultOptionConverter}</item>
					</list>
				</optionConverters>
			</parameters>
		</component>

		<component
			id="uCommerceWebApi"
			service="UCommerce.Web.Api.IContainsWebservices, UCommerce.Web.Api"
			type="UCommerce.Web.Api.AssemblyTag, UCommerce.Web.Api"/>

		<component
			id="DefaultUrlConverter"
			service="UCommerce.Tree.ITreeNodeTypeToUrlConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeTypeToUrlConverter, UCommerce" />

		<component
			id="AppActionUrlConverter"
			service="UCommerce.Tree.ITreeNodeTypeToUrlConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeAppActionToUrlConverter, UCommerce" />

		<component
			id="ActionUrlConverter"
			service="UCommerce.Tree.ITreeNodeTypeToUrlConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeActionToUrlConverter, UCommerce" />

		<component
			id="DefaultOptionConverter"
			service="UCommerce.Tree.ITreeNodeOptionToOptionItemConverter, UCommerce"
			type="UCommerce.Tree.Impl.Converters.TreeNodeOptionToOptionItemConverter, UCommerce" />

		<!-- TreeNodeService providers-->
		<component id="TreeNodeServiceProvider"
			service="UCommerce.Web.Api.Services.Nodes.ITreeNodeServiceProvider, UCommerce.Web.Api"
			type="UCommerce.Web.Api.Services.Nodes.Impl.TreeNodeServiceProvider, UCommerce.Web.Api">
		</component>

		<component id="CatalogNodeService"
			service="UCommerce.Web.Api.Services.Nodes.ITreeNodeService, UCommerce.Web.Api"
			type="UCommerce.Web.Api.Services.Nodes.Impl.ContentNodeService, UCommerce.Web.Api">
			<parameters>
				<serviceType>Catalog</serviceType>
				<treeNodeContentToTreeNodeConverter>${TreeNodeConverterService}</treeNodeContentToTreeNodeConverter>
				<treeContentService>${CatalogTreeService}</treeContentService>
			</parameters>
		</component>

		<component id="TreeNodeService" service="UCommerce.Web.Api.Services.Nodes.ITreeNodeService, UCommerce.Web.Api" type="UCommerce.Web.Api.Services.Nodes.Impl.ContentNodeService, UCommerce.Web.Api">
			<parameters>
				<serviceType>Tree</serviceType>
				<treeNodeContentToTreeNodeConverter>${TreeNodeConverterService}</treeNodeContentToTreeNodeConverter>
				<treeContentService>${TreeServiceShell}</treeContentService>
			</parameters>
		</component>

		<component
			id="CatalogTreeService"
			service="UCommerce.Tree.ITreeContentService, UCommerce"
			type="UCommerce.Tree.Impl.TreeContentService, UCommerce">
			<parameters>
				<RootNodeType>root</RootNodeType>
				<RootNodeHasAutoLoad>true</RootNodeHasAutoLoad>
				<RootNodeHasChildren>true</RootNodeHasChildren>
				<RootNodeName>uCommerce</RootNodeName>
				<RootNodeIcon>ucommerce-logo-icon.png</RootNodeIcon>
				<RootNodeItemGuid>3806A967-DD30-421F-A835-7D8DE80054B9</RootNodeItemGuid>
				<RootNodeId>-1</RootNodeId>
				<RootNodeParentId>10</RootNodeParentId>
				<contentProviders>
					<list type="UCommerce.Tree.ITreeContentProvider, UCommerce">
						<item>${DefaultShellCatalogSectionProvider}</item>
					</list>
				</contentProviders>
			</parameters>
		</component>

		<component id="ProductNodeService"
			service="UCommerce.Web.Api.Services.Nodes.ITreeNodeService, UCommerce.Web.Api"
			type="UCommerce.Web.Api.Services.Nodes.Impl.ContentNodeService, UCommerce.Web.Api">
			<parameters>
				<serviceType>Products</serviceType>
				<treeNodeContentToTreeNodeConverter>${TreeNodeConverterService}</treeNodeContentToTreeNodeConverter>
				<treeContentService>${CatalogProductTreeService}</treeContentService>
			</parameters>
		</component>

		<component
			id="CatalogProductTreeService"
			service="UCommerce.Tree.ITreeContentService, UCommerce"
			type="UCommerce.Tree.Impl.TreeContentService, UCommerce">
			<parameters>
				<RootNodeType>root</RootNodeType>
				<RootNodeHasAutoLoad>true</RootNodeHasAutoLoad>
				<RootNodeHasChildren>true</RootNodeHasChildren>
				<RootNodeName>uCommerce</RootNodeName>
				<RootNodeIcon>ucommerce-logo-icon.png</RootNodeIcon>
				<RootNodeItemGuid>3806A967-DD30-421F-A835-7D8DE80054B9</RootNodeItemGuid>
				<RootNodeId>-1</RootNodeId>
				<RootNodeParentId>10</RootNodeParentId>
				<contentProviders>
					<list type="UCommerce.Tree.ITreeContentProvider, UCommerce">
						<item>${DefaultCatalogSectionProvider}</item>
						<item>${DefaultProductSectionProvider}</item>
					</list>
				</contentProviders>
			</parameters>
		</component>

		<!-- List providers to initiate data from a list of preselected values-->
		<component 
			id="TreeNodesListProviderFactory" 
			service="UCommerce.Tree.ITreeNodesListProviderFactory, UCommerce"
			type="UCommerce.Tree.Impl.Providers.TreeNodesListProviderFactory, UCommerce" />
		
		
		<component 
			id="ProductTreeNodesListProvider" 
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.ProductTreeNodesListProvider, UCommerce" />
		
		<component 
			id="CategoriesTreeNodesListProvider" 
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.CategoriesTreeNodesListProvider, UCommerce" />
		
		<component 
			id="ContentTreeNodesListProvider"
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.ContentTreeNodesListProvider, Ucommerce" />
    
    <component
      id="MediaTreNodesListProvider"
      service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
      type="UCommerce.Tree.Impl.Providers.MediaTreeNodesListProvider, Ucommerce"/>

		<component
			id="ProductCatalogGroupTreeNodesListProvider"
			service="UCommerce.Tree.ITreeNodesListProvider, UCommerce"
			type="UCommerce.Tree.Impl.Providers.ProductCatalogGroupTreeNodesListProvider, UCommerce" />

		<!-- Other -->
		<component
			id="SectionBuilder"
			service="UCommerce.Presentation.Web.Pages.ITabViewBuilder, UCommerce.Presentation"
			type="UCommerce.Presentation.Web.Pages.TabViewBuilder, UCommerce.Presentation" />

		<component
			id="ResourceManager"
			service="UCommerce.Infrastructure.Globalization.IResourceManager, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Globalization.GlobalResourceManager, UCommerce.Infrastructure" />

		<component
			id="UpdateAuditModifiedData"
			service="UCommerce.EntitiesV2.Revisions.IUpdateAuditModifiedData, UCommerce"
			type="UCommerce.EntitiesV2.Revisions.Impl.UpdateAuditModifiedData, UCommerce" />
		
		<!--- Security -->
		<component
			id="RoleService"
			service="UCommerce.Security.IRoleService, UCommerce"
			type="UCommerce.Security.RoleService, UCommerce"/>

		<component
				id="EnsureRolesService"
				service="UCommerce.Security.IEnsureRolesAreUpToDateService, UCommerce"
				type="UCommerce.Security.EnsureRolesAreUpToDateService, UCommerce"/>

		<component
				id="SecurityService"
				service="UCommerce.Security.ISecurityService, UCommerce"
				type="UCommerce.Security.SecurityService, UCommerce"/>

		<component
				id="WidgetService"
				service="UCommerce.Presentation.UI.IWidgetService, UCommerce.Presentation"
				type="UCommerce.Presentation.UI.Impl.WidgetService, UCommerce.Presentation">
		</component>
  </components>
</configuration>