@model Plataforma.Areas.PCD.Models.documento

@{
    ViewBag.Title = "Editar";

}

<h2 class="class-forms">Editar</h2>

@using (Html.BeginForm("Edit", "Documentos", FormMethod.Post,
                                                    new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-lg-9">
        <h1 class="class-forms"><i class="fa fa-graduation-cap" aria-hidden="true"></i> &nbsp;Documento</h1>
        <h6>Edite la información necesaria del documento</h6>
        <br><br>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <input type="hidden" id="unidadAnterior" name="unidadAnterior" value="@Model.unidad">

        <div class="form-group">
            @Html.LabelFor(model => model.id_tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("id_tipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.url, new { htmlAttributes = new { @class = "form-control" }, style = "display:none" })
                <input type="file" id="file" name="file" value="" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.titulo, "Titulo", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion_corta, "Descripcion", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion_corta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion_corta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion_detallada, "Detalle", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.descripcion_detallada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion_detallada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, "Estado", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status)
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.historial_version, "Historial de cambios", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.historial_version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.historial_version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero_version, "Version", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numero_version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero_version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unidad, "Unidad", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("unidad", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.unidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.capitulo, "Capitulo", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.capitulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.capitulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.contador_visitas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.fecha_publicacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.imagen, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-6 col-md-10">
                <input type="submit" value="Editar" class="btn btn-primary" />
            </div>
        </div>
        <div class="col-lg-9">
            @Html.ActionLink("Administrar niveles", "AdministrarNivelesDocumento", new { id = Model.id }) |
            @Html.ActionLink("Volver al indice", "Index")
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
